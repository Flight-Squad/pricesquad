import { Router } from 'express';
import { DB } from 'config/database';
import { Transaction, Firebase, Trip, Customer, TransactionStatus } from '@flight-squad/admin';
import StatusCodes from './config/statusCodes';
import { PaymentPageRoute } from 'config/flightsquad';

const transactionsRouter = Router();

transactionsRouter.get('/:id', async (req, res) => {
    const { id } = req.params;
    const transaction = await DB.find(Firebase.Collections.Transactions, id, Transaction);
    res.send(JSON.stringify(transaction.data()));
});

interface CreateTransactionFields {
    /** Amount to charge in USD */
    amount: number;
    /** customer id */
    customer: string;
    trip: Trip;
}

/** 
 * Database: 1 Read, 1 Write
 * 
 * Takes `CreateTransactionFields` as request body.
 * 
 * Responds with:
 * 
 * - transaction: TransactionFields
 * - paymentUrl: url where customer can pay
 */
transactionsRouter.post('/', async (req, res) => {
    const fields: CreateTransactionFields = req.body;
    const customer = await DB.find(Customer.Collection, fields.customer, Customer);
    let transaction = new Transaction({
        status: TransactionStatus.Created,
        customer: customer.identifiers(),
        id: '', // ID will be autogenerated when db entry is created, so leave empty
        trip: fields.trip,
        amount: fields.amount,
        db: DB,
    });
    transaction = await transaction.createDoc();
    res.status(StatusCodes.Post.success).send(JSON.stringify({
        transaction: transaction.data(),
        paymentUrl: `${PaymentPageRoute}?id=${transaction.id}`,
    }));
});

export default transactionsRouter;
